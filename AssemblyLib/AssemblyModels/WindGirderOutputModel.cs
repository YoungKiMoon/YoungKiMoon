using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class WindGirderOutputModel : Notifier	{		public WindGirderOutputModel()		{					WindGirderNo = "";			WindGirderElevation = "";			ShellCourseNo = "";			ShellThk = "";			AngleSize = "";			AngleThik = "";		}				private string _WindGirderNo;		public string WindGirderNo			{				get { return _WindGirderNo; }				set				{					_WindGirderNo = value;					OnPropertyChanged(nameof(WindGirderNo));				}			}				private string _WindGirderElevation;		public string WindGirderElevation			{				get { return _WindGirderElevation; }				set				{					_WindGirderElevation = value;					OnPropertyChanged(nameof(WindGirderElevation));				}			}				private string _ShellCourseNo;		public string ShellCourseNo			{				get { return _ShellCourseNo; }				set				{					_ShellCourseNo = value;					OnPropertyChanged(nameof(ShellCourseNo));				}			}				private string _ShellThk;		public string ShellThk			{				get { return _ShellThk; }				set				{					_ShellThk = value;					OnPropertyChanged(nameof(ShellThk));				}			}				private string _AngleSize;		public string AngleSize			{				get { return _AngleSize; }				set				{					_AngleSize = value;					OnPropertyChanged(nameof(AngleSize));				}			}				private string _AngleThik;		public string AngleThik			{				get { return _AngleThik; }				set				{					_AngleThik = value;					OnPropertyChanged(nameof(AngleThik));				}			}			}}