using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class AnchorageInputModel : Notifier	{		public AnchorageInputModel()		{					AnchorChairBlot = "";			AnchorType = "";			AnchorQty = "";			AnchorSize = "";			AnchorStartAngle = "";			AnchorHeight = "";			TopPlateThickness = "";			TopPlateA1 = "";			TopPlateB = "";			TopPlateC = "";			TopPlateF = "";			TopPlateBlotHoleDiameter = "";			SidePlateThickness = "";			SidePlateDistance = "";			ReinforcementPad = "";			ReinforcementPadThickness = "";			ReinforcementPadWidth = "";			ReinforcementPadLength = "";			ReinforcementPadCornerRadius = "";		}				private string _AnchorChairBlot;		public string AnchorChairBlot			{				get { return _AnchorChairBlot; }				set				{					_AnchorChairBlot = value;					OnPropertyChanged(nameof(AnchorChairBlot));				}			}				private string _AnchorType;		public string AnchorType			{				get { return _AnchorType; }				set				{					_AnchorType = value;					OnPropertyChanged(nameof(AnchorType));				}			}				private string _AnchorQty;		public string AnchorQty			{				get { return _AnchorQty; }				set				{					_AnchorQty = value;					OnPropertyChanged(nameof(AnchorQty));				}			}				private string _AnchorSize;		public string AnchorSize			{				get { return _AnchorSize; }				set				{					_AnchorSize = value;					OnPropertyChanged(nameof(AnchorSize));				}			}				private string _AnchorStartAngle;		public string AnchorStartAngle			{				get { return _AnchorStartAngle; }				set				{					_AnchorStartAngle = value;					OnPropertyChanged(nameof(AnchorStartAngle));				}			}				private string _AnchorHeight;		public string AnchorHeight			{				get { return _AnchorHeight; }				set				{					_AnchorHeight = value;					OnPropertyChanged(nameof(AnchorHeight));				}			}				private string _TopPlateThickness;		public string TopPlateThickness			{				get { return _TopPlateThickness; }				set				{					_TopPlateThickness = value;					OnPropertyChanged(nameof(TopPlateThickness));				}			}				private string _TopPlateA1;		public string TopPlateA1			{				get { return _TopPlateA1; }				set				{					_TopPlateA1 = value;					OnPropertyChanged(nameof(TopPlateA1));				}			}				private string _TopPlateB;		public string TopPlateB			{				get { return _TopPlateB; }				set				{					_TopPlateB = value;					OnPropertyChanged(nameof(TopPlateB));				}			}				private string _TopPlateC;		public string TopPlateC			{				get { return _TopPlateC; }				set				{					_TopPlateC = value;					OnPropertyChanged(nameof(TopPlateC));				}			}				private string _TopPlateF;		public string TopPlateF			{				get { return _TopPlateF; }				set				{					_TopPlateF = value;					OnPropertyChanged(nameof(TopPlateF));				}			}				private string _TopPlateBlotHoleDiameter;		public string TopPlateBlotHoleDiameter			{				get { return _TopPlateBlotHoleDiameter; }				set				{					_TopPlateBlotHoleDiameter = value;					OnPropertyChanged(nameof(TopPlateBlotHoleDiameter));				}			}				private string _SidePlateThickness;		public string SidePlateThickness			{				get { return _SidePlateThickness; }				set				{					_SidePlateThickness = value;					OnPropertyChanged(nameof(SidePlateThickness));				}			}				private string _SidePlateDistance;		public string SidePlateDistance			{				get { return _SidePlateDistance; }				set				{					_SidePlateDistance = value;					OnPropertyChanged(nameof(SidePlateDistance));				}			}				private string _ReinforcementPad;		public string ReinforcementPad			{				get { return _ReinforcementPad; }				set				{					_ReinforcementPad = value;					OnPropertyChanged(nameof(ReinforcementPad));				}			}				private string _ReinforcementPadThickness;		public string ReinforcementPadThickness			{				get { return _ReinforcementPadThickness; }				set				{					_ReinforcementPadThickness = value;					OnPropertyChanged(nameof(ReinforcementPadThickness));				}			}				private string _ReinforcementPadWidth;		public string ReinforcementPadWidth			{				get { return _ReinforcementPadWidth; }				set				{					_ReinforcementPadWidth = value;					OnPropertyChanged(nameof(ReinforcementPadWidth));				}			}				private string _ReinforcementPadLength;		public string ReinforcementPadLength			{				get { return _ReinforcementPadLength; }				set				{					_ReinforcementPadLength = value;					OnPropertyChanged(nameof(ReinforcementPadLength));				}			}				private string _ReinforcementPadCornerRadius;		public string ReinforcementPadCornerRadius			{				get { return _ReinforcementPadCornerRadius; }				set				{					_ReinforcementPadCornerRadius = value;					OnPropertyChanged(nameof(ReinforcementPadCornerRadius));				}			}			}}