using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class NRafterCenteringInternalModel : Notifier	{		public NRafterCenteringInternalModel()		{					TankType = "";			Type = "";			InEx = "";			Angle = "";			Rafter = "";			A = "";			B = "";			C = "";			D = "";			E = "";			F = "";			G = "";			H = "";			J = "";			K = "";			t1 = "";			A1 = "";			B1 = "";			C1 = "";			D1 = "";			E1 = "";			HoleQty = "";			Girder1st = "";			Girder2nd = "";		}				private string _TankType;		public string TankType			{				get { return _TankType; }				set				{					_TankType = value;					OnPropertyChanged(nameof(TankType));				}			}				private string _Type;		public string Type			{				get { return _Type; }				set				{					_Type = value;					OnPropertyChanged(nameof(Type));				}			}				private string _InEx;		public string InEx			{				get { return _InEx; }				set				{					_InEx = value;					OnPropertyChanged(nameof(InEx));				}			}				private string _Angle;		public string Angle			{				get { return _Angle; }				set				{					_Angle = value;					OnPropertyChanged(nameof(Angle));				}			}				private string _Rafter;		public string Rafter			{				get { return _Rafter; }				set				{					_Rafter = value;					OnPropertyChanged(nameof(Rafter));				}			}				private string _A;		public string A			{				get { return _A; }				set				{					_A = value;					OnPropertyChanged(nameof(A));				}			}				private string _B;		public string B			{				get { return _B; }				set				{					_B = value;					OnPropertyChanged(nameof(B));				}			}				private string _C;		public string C			{				get { return _C; }				set				{					_C = value;					OnPropertyChanged(nameof(C));				}			}				private string _D;		public string D			{				get { return _D; }				set				{					_D = value;					OnPropertyChanged(nameof(D));				}			}				private string _E;		public string E			{				get { return _E; }				set				{					_E = value;					OnPropertyChanged(nameof(E));				}			}				private string _F;		public string F			{				get { return _F; }				set				{					_F = value;					OnPropertyChanged(nameof(F));				}			}				private string _G;		public string G			{				get { return _G; }				set				{					_G = value;					OnPropertyChanged(nameof(G));				}			}				private string _H;		public string H			{				get { return _H; }				set				{					_H = value;					OnPropertyChanged(nameof(H));				}			}				private string _J;		public string J			{				get { return _J; }				set				{					_J = value;					OnPropertyChanged(nameof(J));				}			}				private string _K;		public string K			{				get { return _K; }				set				{					_K = value;					OnPropertyChanged(nameof(K));				}			}				private string _t1;		public string t1			{				get { return _t1; }				set				{					_t1 = value;					OnPropertyChanged(nameof(t1));				}			}				private string _A1;		public string A1			{				get { return _A1; }				set				{					_A1 = value;					OnPropertyChanged(nameof(A1));				}			}				private string _B1;		public string B1			{				get { return _B1; }				set				{					_B1 = value;					OnPropertyChanged(nameof(B1));				}			}				private string _C1;		public string C1			{				get { return _C1; }				set				{					_C1 = value;					OnPropertyChanged(nameof(C1));				}			}				private string _D1;		public string D1			{				get { return _D1; }				set				{					_D1 = value;					OnPropertyChanged(nameof(D1));				}			}				private string _E1;		public string E1			{				get { return _E1; }				set				{					_E1 = value;					OnPropertyChanged(nameof(E1));				}			}				private string _HoleQty;		public string HoleQty			{				get { return _HoleQty; }				set				{					_HoleQty = value;					OnPropertyChanged(nameof(HoleQty));				}			}				private string _Girder1st;		public string Girder1st			{				get { return _Girder1st; }				set				{					_Girder1st = value;					OnPropertyChanged(nameof(Girder1st));				}			}				private string _Girder2nd;		public string Girder2nd			{				get { return _Girder2nd; }				set				{					_Girder2nd = value;					OnPropertyChanged(nameof(Girder2nd));				}			}			}}