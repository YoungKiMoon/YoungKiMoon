using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class NozzleInputModel : Notifier	{		public NozzleInputModel()		{					Position = "";			LR = "";			Mark = "";			Size = "";			SCH = "";			Qty = "";			Flange = "";			Rating = "";			Type = "";			Facing = "";			R = "";			H = "";			Ort = "";			AttachedType = "";			TiltAngle = "";			OffsetToCL = "";			Description = "";			Remarks = "";			JointType = "";			Fitting = "";			ReinforcingPadType = "";			InletOutlet = "";			Interal = "";			Sump = "";			OtherFlange = "";			HRSort = 0;		}				private string _Position;		public string Position			{				get { return _Position; }				set				{					_Position = value;					OnPropertyChanged(nameof(Position));				}			}				private string _LR;		public string LR			{				get { return _LR; }				set				{					_LR = value;					OnPropertyChanged(nameof(LR));				}			}				private string _Mark;		public string Mark			{				get { return _Mark; }				set				{					_Mark = value;					OnPropertyChanged(nameof(Mark));				}			}				private string _Size;		public string Size			{				get { return _Size; }				set				{					_Size = value;					OnPropertyChanged(nameof(Size));				}			}				private string _SCH;		public string SCH			{				get { return _SCH; }				set				{					_SCH = value;					OnPropertyChanged(nameof(SCH));				}			}				private string _Qty;		public string Qty			{				get { return _Qty; }				set				{					_Qty = value;					OnPropertyChanged(nameof(Qty));				}			}				private string _Flange;		public string Flange			{				get { return _Flange; }				set				{					_Flange = value;					OnPropertyChanged(nameof(Flange));				}			}				private string _Rating;		public string Rating			{				get { return _Rating; }				set				{					_Rating = value;					OnPropertyChanged(nameof(Rating));				}			}				private string _Type;		public string Type			{				get { return _Type; }				set				{					_Type = value;					OnPropertyChanged(nameof(Type));				}			}				private string _Facing;		public string Facing			{				get { return _Facing; }				set				{					_Facing = value;					OnPropertyChanged(nameof(Facing));				}			}				private string _R;		public string R			{				get { return _R; }				set				{					_R = value;					OnPropertyChanged(nameof(R));				}			}				private string _H;		public string H			{				get { return _H; }				set				{					_H = value;					OnPropertyChanged(nameof(H));				}			}				private string _Ort;		public string Ort			{				get { return _Ort; }				set				{					_Ort = value;					OnPropertyChanged(nameof(Ort));				}			}				private string _AttachedType;		public string AttachedType			{				get { return _AttachedType; }				set				{					_AttachedType = value;					OnPropertyChanged(nameof(AttachedType));				}			}				private string _TiltAngle;		public string TiltAngle			{				get { return _TiltAngle; }				set				{					_TiltAngle = value;					OnPropertyChanged(nameof(TiltAngle));				}			}				private string _OffsetToCL;		public string OffsetToCL			{				get { return _OffsetToCL; }				set				{					_OffsetToCL = value;					OnPropertyChanged(nameof(OffsetToCL));				}			}				private string _Description;		public string Description			{				get { return _Description; }				set				{					_Description = value;					OnPropertyChanged(nameof(Description));				}			}				private string _Remarks;		public string Remarks			{				get { return _Remarks; }				set				{					_Remarks = value;					OnPropertyChanged(nameof(Remarks));				}			}				private string _JointType;		public string JointType			{				get { return _JointType; }				set				{					_JointType = value;					OnPropertyChanged(nameof(JointType));				}			}				private string _Fitting;		public string Fitting			{				get { return _Fitting; }				set				{					_Fitting = value;					OnPropertyChanged(nameof(Fitting));				}			}				private string _ReinforcingPadType;		public string ReinforcingPadType			{				get { return _ReinforcingPadType; }				set				{					_ReinforcingPadType = value;					OnPropertyChanged(nameof(ReinforcingPadType));				}			}				private string _InletOutlet;		public string InletOutlet			{				get { return _InletOutlet; }				set				{					_InletOutlet = value;					OnPropertyChanged(nameof(InletOutlet));				}			}				private string _Interal;		public string Interal			{				get { return _Interal; }				set				{					_Interal = value;					OnPropertyChanged(nameof(Interal));				}			}				private string _Sump;		public string Sump			{				get { return _Sump; }				set				{					_Sump = value;					OnPropertyChanged(nameof(Sump));				}			}				private string _OtherFlange;		public string OtherFlange			{				get { return _OtherFlange; }				set				{					_OtherFlange = value;					OnPropertyChanged(nameof(OtherFlange));				}			}				private double _HRSort;		public double HRSort			{				get { return _HRSort; }				set				{					_HRSort = value;					OnPropertyChanged(nameof(HRSort));				}			}			}}