using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class GeneralDesignDataModel : Notifier	{		public GeneralDesignDataModel()		{					CodeApplied = "";			AppendicesUsed = "";			ShellDesign = "";			RoofDesign = "";			RoofStructureDesign = "";			Contents = "";			DesignSpecGR = "";			MeasurementUnit = "";			RoofType = "";			SizeNominalID = "";			SizeTankHeight = "";			DesignTempMin = "";			DesignTempMax = "";			DesignPressInt = "";			DesignPressExt = "";			TestSPGR = "";			OperTempMin = "";			OperTempNor = "";			OperTempMax = "";			OperPressInt = "";			OperPressExt = "";			VaporPressureMax = "";			SetPressureEmerCoverManhole = "";			SetPressureBreatherValve = "";			SetPressureBreatherValveVac = "";			PumpingRatesIn = "";			PumpingRatesOut = "";			RoofLoadsUniformLive = "";			RoofLoadsSpecialLoading = "";			RainFallMax = "";			SnowFallTotalAccumulation = "";			FoundationType = "";			MDMT = "";		}				private string _CodeApplied;		public string CodeApplied			{				get { return _CodeApplied; }				set				{					_CodeApplied = value;					OnPropertyChanged(nameof(CodeApplied));				}			}				private string _AppendicesUsed;		public string AppendicesUsed			{				get { return _AppendicesUsed; }				set				{					_AppendicesUsed = value;					OnPropertyChanged(nameof(AppendicesUsed));				}			}				private string _ShellDesign;		public string ShellDesign			{				get { return _ShellDesign; }				set				{					_ShellDesign = value;					OnPropertyChanged(nameof(ShellDesign));				}			}				private string _RoofDesign;		public string RoofDesign			{				get { return _RoofDesign; }				set				{					_RoofDesign = value;					OnPropertyChanged(nameof(RoofDesign));				}			}				private string _RoofStructureDesign;		public string RoofStructureDesign			{				get { return _RoofStructureDesign; }				set				{					_RoofStructureDesign = value;					OnPropertyChanged(nameof(RoofStructureDesign));				}			}				private string _Contents;		public string Contents			{				get { return _Contents; }				set				{					_Contents = value;					OnPropertyChanged(nameof(Contents));				}			}				private string _DesignSpecGR;		public string DesignSpecGR			{				get { return _DesignSpecGR; }				set				{					_DesignSpecGR = value;					OnPropertyChanged(nameof(DesignSpecGR));				}			}				private string _MeasurementUnit;		public string MeasurementUnit			{				get { return _MeasurementUnit; }				set				{					_MeasurementUnit = value;					OnPropertyChanged(nameof(MeasurementUnit));				}			}				private string _RoofType;		public string RoofType			{				get { return _RoofType; }				set				{					_RoofType = value;					OnPropertyChanged(nameof(RoofType));				}			}				private string _SizeNominalID;		public string SizeNominalID			{				get { return _SizeNominalID; }				set				{					_SizeNominalID = value;					OnPropertyChanged(nameof(SizeNominalID));				}			}				private string _SizeTankHeight;		public string SizeTankHeight			{				get { return _SizeTankHeight; }				set				{					_SizeTankHeight = value;					OnPropertyChanged(nameof(SizeTankHeight));				}			}				private string _DesignTempMin;		public string DesignTempMin			{				get { return _DesignTempMin; }				set				{					_DesignTempMin = value;					OnPropertyChanged(nameof(DesignTempMin));				}			}				private string _DesignTempMax;		public string DesignTempMax			{				get { return _DesignTempMax; }				set				{					_DesignTempMax = value;					OnPropertyChanged(nameof(DesignTempMax));				}			}				private string _DesignPressInt;		public string DesignPressInt			{				get { return _DesignPressInt; }				set				{					_DesignPressInt = value;					OnPropertyChanged(nameof(DesignPressInt));				}			}				private string _DesignPressExt;		public string DesignPressExt			{				get { return _DesignPressExt; }				set				{					_DesignPressExt = value;					OnPropertyChanged(nameof(DesignPressExt));				}			}				private string _TestSPGR;		public string TestSPGR			{				get { return _TestSPGR; }				set				{					_TestSPGR = value;					OnPropertyChanged(nameof(TestSPGR));				}			}				private string _OperTempMin;		public string OperTempMin			{				get { return _OperTempMin; }				set				{					_OperTempMin = value;					OnPropertyChanged(nameof(OperTempMin));				}			}				private string _OperTempNor;		public string OperTempNor			{				get { return _OperTempNor; }				set				{					_OperTempNor = value;					OnPropertyChanged(nameof(OperTempNor));				}			}				private string _OperTempMax;		public string OperTempMax			{				get { return _OperTempMax; }				set				{					_OperTempMax = value;					OnPropertyChanged(nameof(OperTempMax));				}			}				private string _OperPressInt;		public string OperPressInt			{				get { return _OperPressInt; }				set				{					_OperPressInt = value;					OnPropertyChanged(nameof(OperPressInt));				}			}				private string _OperPressExt;		public string OperPressExt			{				get { return _OperPressExt; }				set				{					_OperPressExt = value;					OnPropertyChanged(nameof(OperPressExt));				}			}				private string _VaporPressureMax;		public string VaporPressureMax			{				get { return _VaporPressureMax; }				set				{					_VaporPressureMax = value;					OnPropertyChanged(nameof(VaporPressureMax));				}			}				private string _SetPressureEmerCoverManhole;		public string SetPressureEmerCoverManhole			{				get { return _SetPressureEmerCoverManhole; }				set				{					_SetPressureEmerCoverManhole = value;					OnPropertyChanged(nameof(SetPressureEmerCoverManhole));				}			}				private string _SetPressureBreatherValve;		public string SetPressureBreatherValve			{				get { return _SetPressureBreatherValve; }				set				{					_SetPressureBreatherValve = value;					OnPropertyChanged(nameof(SetPressureBreatherValve));				}			}				private string _SetPressureBreatherValveVac;		public string SetPressureBreatherValveVac			{				get { return _SetPressureBreatherValveVac; }				set				{					_SetPressureBreatherValveVac = value;					OnPropertyChanged(nameof(SetPressureBreatherValveVac));				}			}				private string _PumpingRatesIn;		public string PumpingRatesIn			{				get { return _PumpingRatesIn; }				set				{					_PumpingRatesIn = value;					OnPropertyChanged(nameof(PumpingRatesIn));				}			}				private string _PumpingRatesOut;		public string PumpingRatesOut			{				get { return _PumpingRatesOut; }				set				{					_PumpingRatesOut = value;					OnPropertyChanged(nameof(PumpingRatesOut));				}			}				private string _RoofLoadsUniformLive;		public string RoofLoadsUniformLive			{				get { return _RoofLoadsUniformLive; }				set				{					_RoofLoadsUniformLive = value;					OnPropertyChanged(nameof(RoofLoadsUniformLive));				}			}				private string _RoofLoadsSpecialLoading;		public string RoofLoadsSpecialLoading			{				get { return _RoofLoadsSpecialLoading; }				set				{					_RoofLoadsSpecialLoading = value;					OnPropertyChanged(nameof(RoofLoadsSpecialLoading));				}			}				private string _RainFallMax;		public string RainFallMax			{				get { return _RainFallMax; }				set				{					_RainFallMax = value;					OnPropertyChanged(nameof(RainFallMax));				}			}				private string _SnowFallTotalAccumulation;		public string SnowFallTotalAccumulation			{				get { return _SnowFallTotalAccumulation; }				set				{					_SnowFallTotalAccumulation = value;					OnPropertyChanged(nameof(SnowFallTotalAccumulation));				}			}				private string _FoundationType;		public string FoundationType			{				get { return _FoundationType; }				set				{					_FoundationType = value;					OnPropertyChanged(nameof(FoundationType));				}			}				private string _MDMT;		public string MDMT			{				get { return _MDMT; }				set				{					_MDMT = value;					OnPropertyChanged(nameof(MDMT));				}			}			}}