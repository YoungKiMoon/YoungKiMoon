using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class InOutInternalPipe : Notifier	{		public InOutInternalPipe()		{					DN = "";			NPS = "";			OD = "";			A = "";			B = "";			C = "";			D = "";			E = "";			F = "";			G = "";			I = "";			FlatBarH = "";			A3 = "";			B3 = "";			C3 = "";			A1 = "";			B1 = "";			C1 = "";			A2 = "";			B2 = "";			C2 = "";			FlatBarWidth = "";			FlatBarThickness = "";			CoupingGap = "";			Elbow = "";		}				private string _DN;		public string DN			{				get { return _DN; }				set				{					_DN = value;					OnPropertyChanged(nameof(DN));				}			}				private string _NPS;		public string NPS			{				get { return _NPS; }				set				{					_NPS = value;					OnPropertyChanged(nameof(NPS));				}			}				private string _OD;		public string OD			{				get { return _OD; }				set				{					_OD = value;					OnPropertyChanged(nameof(OD));				}			}				private string _A;		public string A			{				get { return _A; }				set				{					_A = value;					OnPropertyChanged(nameof(A));				}			}				private string _B;		public string B			{				get { return _B; }				set				{					_B = value;					OnPropertyChanged(nameof(B));				}			}				private string _C;		public string C			{				get { return _C; }				set				{					_C = value;					OnPropertyChanged(nameof(C));				}			}				private string _D;		public string D			{				get { return _D; }				set				{					_D = value;					OnPropertyChanged(nameof(D));				}			}				private string _E;		public string E			{				get { return _E; }				set				{					_E = value;					OnPropertyChanged(nameof(E));				}			}				private string _F;		public string F			{				get { return _F; }				set				{					_F = value;					OnPropertyChanged(nameof(F));				}			}				private string _G;		public string G			{				get { return _G; }				set				{					_G = value;					OnPropertyChanged(nameof(G));				}			}				private string _I;		public string I			{				get { return _I; }				set				{					_I = value;					OnPropertyChanged(nameof(I));				}			}				private string _FlatBarH;		public string FlatBarH			{				get { return _FlatBarH; }				set				{					_FlatBarH = value;					OnPropertyChanged(nameof(FlatBarH));				}			}				private string _A3;		public string A3			{				get { return _A3; }				set				{					_A3 = value;					OnPropertyChanged(nameof(A3));				}			}				private string _B3;		public string B3			{				get { return _B3; }				set				{					_B3 = value;					OnPropertyChanged(nameof(B3));				}			}				private string _C3;		public string C3			{				get { return _C3; }				set				{					_C3 = value;					OnPropertyChanged(nameof(C3));				}			}				private string _A1;		public string A1			{				get { return _A1; }				set				{					_A1 = value;					OnPropertyChanged(nameof(A1));				}			}				private string _B1;		public string B1			{				get { return _B1; }				set				{					_B1 = value;					OnPropertyChanged(nameof(B1));				}			}				private string _C1;		public string C1			{				get { return _C1; }				set				{					_C1 = value;					OnPropertyChanged(nameof(C1));				}			}				private string _A2;		public string A2			{				get { return _A2; }				set				{					_A2 = value;					OnPropertyChanged(nameof(A2));				}			}				private string _B2;		public string B2			{				get { return _B2; }				set				{					_B2 = value;					OnPropertyChanged(nameof(B2));				}			}				private string _C2;		public string C2			{				get { return _C2; }				set				{					_C2 = value;					OnPropertyChanged(nameof(C2));				}			}				private string _FlatBarWidth;		public string FlatBarWidth			{				get { return _FlatBarWidth; }				set				{					_FlatBarWidth = value;					OnPropertyChanged(nameof(FlatBarWidth));				}			}				private string _FlatBarThickness;		public string FlatBarThickness			{				get { return _FlatBarThickness; }				set				{					_FlatBarThickness = value;					OnPropertyChanged(nameof(FlatBarThickness));				}			}				private string _CoupingGap;		public string CoupingGap			{				get { return _CoupingGap; }				set				{					_CoupingGap = value;					OnPropertyChanged(nameof(CoupingGap));				}			}				private string _Elbow;		public string Elbow			{				get { return _Elbow; }				set				{					_Elbow = value;					OnPropertyChanged(nameof(Elbow));				}			}			}}