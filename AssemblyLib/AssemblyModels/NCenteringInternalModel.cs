using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class NCenteringInternalModel : Notifier	{		public NCenteringInternalModel()		{					TankType = "";			Type = "";			InEx = "";			Rafter = "";			OD = "";			ID = "";			A = "";			B = "";			C = "";			D = "";			E = "";			t1 = "";			t2 = "";		}				private string _TankType;		public string TankType			{				get { return _TankType; }				set				{					_TankType = value;					OnPropertyChanged(nameof(TankType));				}			}				private string _Type;		public string Type			{				get { return _Type; }				set				{					_Type = value;					OnPropertyChanged(nameof(Type));				}			}				private string _InEx;		public string InEx			{				get { return _InEx; }				set				{					_InEx = value;					OnPropertyChanged(nameof(InEx));				}			}				private string _Rafter;		public string Rafter			{				get { return _Rafter; }				set				{					_Rafter = value;					OnPropertyChanged(nameof(Rafter));				}			}				private string _OD;		public string OD			{				get { return _OD; }				set				{					_OD = value;					OnPropertyChanged(nameof(OD));				}			}				private string _ID;		public string ID			{				get { return _ID; }				set				{					_ID = value;					OnPropertyChanged(nameof(ID));				}			}				private string _A;		public string A			{				get { return _A; }				set				{					_A = value;					OnPropertyChanged(nameof(A));				}			}				private string _B;		public string B			{				get { return _B; }				set				{					_B = value;					OnPropertyChanged(nameof(B));				}			}				private string _C;		public string C			{				get { return _C; }				set				{					_C = value;					OnPropertyChanged(nameof(C));				}			}				private string _D;		public string D			{				get { return _D; }				set				{					_D = value;					OnPropertyChanged(nameof(D));				}			}				private string _E;		public string E			{				get { return _E; }				set				{					_E = value;					OnPropertyChanged(nameof(E));				}			}				private string _t1;		public string t1			{				get { return _t1; }				set				{					_t1 = value;					OnPropertyChanged(nameof(t1));				}			}				private string _t2;		public string t2			{				get { return _t2; }				set				{					_t2 = value;					OnPropertyChanged(nameof(t2));				}			}			}}