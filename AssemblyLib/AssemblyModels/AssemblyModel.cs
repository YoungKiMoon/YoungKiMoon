using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class AssemblyModel : Notifier	{		public AssemblyModel()		{					GeneralDesignData = new GeneralDesignDataModel();			GeneralCapacityWeight = new ObservableCollection<GeneralCapacityWeightModel>();			GeneralMomentAndShearForceAtBase = new ObservableCollection<GeneralMomentAndShearForceAtBaseModel>();			GeneralMaterialSpecs = new ObservableCollection<GeneralMaterialSpecsModel>();			GeneralCorrosionAllowance = new ObservableCollection<GeneralCorrosionAllowanceModel>();			GeneralEarquake = new ObservableCollection<GeneralEarthquakeModel>();			ShellInput = new ObservableCollection<ShellInputModel>();			ShellOutput = new ObservableCollection<ShellOutputModel>();			RoofInput = new ObservableCollection<RoofInputModel>();			RoofOutput = new ObservableCollection<RoofOutputModel>();			BottomInput = new ObservableCollection<BottomInputModel>();			BottomOutput = new ObservableCollection<BottomOutputModel>();			NozzleInputModel = new ObservableCollection<NozzleInputModel>();			WindGirderInput = new ObservableCollection<WindGirderInputModel>();			WindGirderOutput = new ObservableCollection<WindGirderOutputModel>();			InsulationInput = new ObservableCollection<InsulationInputModel>();			AngleInput = new ObservableCollection<EqualAngleSizeModel>();		}				private GeneralDesignDataModel _GeneralDesignData;		public GeneralDesignDataModel GeneralDesignData			{				get { return _GeneralDesignData; }				set				{					_GeneralDesignData = value;					OnPropertyChanged(nameof(GeneralDesignData));				}			}				private ObservableCollection<GeneralCapacityWeightModel> _GeneralCapacityWeight;		public ObservableCollection<GeneralCapacityWeightModel> GeneralCapacityWeight			{				get { return _GeneralCapacityWeight; }				set				{					_GeneralCapacityWeight = value;					OnPropertyChanged(nameof(GeneralCapacityWeight));				}			}				private ObservableCollection<GeneralMomentAndShearForceAtBaseModel> _GeneralMomentAndShearForceAtBase;		public ObservableCollection<GeneralMomentAndShearForceAtBaseModel> GeneralMomentAndShearForceAtBase			{				get { return _GeneralMomentAndShearForceAtBase; }				set				{					_GeneralMomentAndShearForceAtBase = value;					OnPropertyChanged(nameof(GeneralMomentAndShearForceAtBase));				}			}				private ObservableCollection<GeneralMaterialSpecsModel> _GeneralMaterialSpecs;		public ObservableCollection<GeneralMaterialSpecsModel> GeneralMaterialSpecs			{				get { return _GeneralMaterialSpecs; }				set				{					_GeneralMaterialSpecs = value;					OnPropertyChanged(nameof(GeneralMaterialSpecs));				}			}				private ObservableCollection<GeneralCorrosionAllowanceModel> _GeneralCorrosionAllowance;		public ObservableCollection<GeneralCorrosionAllowanceModel> GeneralCorrosionAllowance			{				get { return _GeneralCorrosionAllowance; }				set				{					_GeneralCorrosionAllowance = value;					OnPropertyChanged(nameof(GeneralCorrosionAllowance));				}			}				private ObservableCollection<GeneralEarthquakeModel> _GeneralEarquake;		public ObservableCollection<GeneralEarthquakeModel> GeneralEarquake			{				get { return _GeneralEarquake; }				set				{					_GeneralEarquake = value;					OnPropertyChanged(nameof(GeneralEarquake));				}			}				private ObservableCollection<ShellInputModel> _ShellInput;		public ObservableCollection<ShellInputModel> ShellInput			{				get { return _ShellInput; }				set				{					_ShellInput = value;					OnPropertyChanged(nameof(ShellInput));				}			}				private ObservableCollection<ShellOutputModel> _ShellOutput;		public ObservableCollection<ShellOutputModel> ShellOutput			{				get { return _ShellOutput; }				set				{					_ShellOutput = value;					OnPropertyChanged(nameof(ShellOutput));				}			}				private ObservableCollection<RoofInputModel> _RoofInput;		public ObservableCollection<RoofInputModel> RoofInput			{				get { return _RoofInput; }				set				{					_RoofInput = value;					OnPropertyChanged(nameof(RoofInput));				}			}				private ObservableCollection<RoofOutputModel> _RoofOutput;		public ObservableCollection<RoofOutputModel> RoofOutput			{				get { return _RoofOutput; }				set				{					_RoofOutput = value;					OnPropertyChanged(nameof(RoofOutput));				}			}				private ObservableCollection<BottomInputModel> _BottomInput;		public ObservableCollection<BottomInputModel> BottomInput			{				get { return _BottomInput; }				set				{					_BottomInput = value;					OnPropertyChanged(nameof(BottomInput));				}			}				private ObservableCollection<BottomOutputModel> _BottomOutput;		public ObservableCollection<BottomOutputModel> BottomOutput			{				get { return _BottomOutput; }				set				{					_BottomOutput = value;					OnPropertyChanged(nameof(BottomOutput));				}			}				private ObservableCollection<NozzleInputModel> _NozzleInputModel;		public ObservableCollection<NozzleInputModel> NozzleInputModel			{				get { return _NozzleInputModel; }				set				{					_NozzleInputModel = value;					OnPropertyChanged(nameof(NozzleInputModel));				}			}				private ObservableCollection<WindGirderInputModel> _WindGirderInput;		public ObservableCollection<WindGirderInputModel> WindGirderInput			{				get { return _WindGirderInput; }				set				{					_WindGirderInput = value;					OnPropertyChanged(nameof(WindGirderInput));				}			}				private ObservableCollection<WindGirderOutputModel> _WindGirderOutput;		public ObservableCollection<WindGirderOutputModel> WindGirderOutput			{				get { return _WindGirderOutput; }				set				{					_WindGirderOutput = value;					OnPropertyChanged(nameof(WindGirderOutput));				}			}				private ObservableCollection<InsulationInputModel> _InsulationInput;		public ObservableCollection<InsulationInputModel> InsulationInput			{				get { return _InsulationInput; }				set				{					_InsulationInput = value;					OnPropertyChanged(nameof(InsulationInput));				}			}				private ObservableCollection<EqualAngleSizeModel> _AngleInput;		public ObservableCollection<EqualAngleSizeModel> AngleInput			{				get { return _AngleInput; }				set				{					_AngleInput = value;					OnPropertyChanged(nameof(AngleInput));				}			}						public void CreateSampleAssembly()		{			GeneralDesignDataModel GeneralDesignData11 = new GeneralDesignDataModel();			GeneralDesignData11.AppliedCode="API STD 650, 12TH ED. ADD.2";			GeneralDesignData11.ShellDesign="API-650 (ONE FOOT METHOD) / 위험물 안전관리법";			GeneralDesignData11.RoofDesign="API-650 / 위험물 안전 관리법";			GeneralDesignData11.Contents="70N BASE OIL";			GeneralDesignData11.DesignSpecGr="0.816";			GeneralDesignData11.MeasurementUnit="SI";			GeneralDesignData11.RoofType="CRT";			GeneralDesignData11.SizeNominalId="32400";			GeneralDesignData11.SizeTankHeight="19300";			GeneralDesignData11.PlateWidth="2430";			GeneralDesignData11.PlateMaxLength="9144";			GeneralDesignData11.PumpingRatesIn="12";			GeneralDesignData11.PumpingRatesOut="460";			GeneralDesignData11.OperTempMin="-";			GeneralDesignData11.OperTempNor="-";			GeneralDesignData11.OperTempMax="-";			GeneralDesignData11.DesignTempMin="-10";			GeneralDesignData11.DesignTempMax="50";			GeneralDesignData11.OperPressInt="175";			GeneralDesignData11.OperPressExt="25";			GeneralDesignData11.DesignPressInt="200";			GeneralDesignData11.DesignPressExt="50";			GeneralDesignData11.VaporPressureMax="0.001";			GeneralDesignData11.SetPressureEmergencyCoverManhole="";			GeneralDesignData11.SetPressureBreatherValve="";			GeneralDesignData11.SetPressureBreatherValveVac="";			GeneralDesignData11.TestSpGr="";			GeneralDesignData11.RoofLoadsUniformLive="";			GeneralDesignData11.RoofLoadsSpecialLoading="";			GeneralDesignData11.WindVelocity="";			GeneralDesignData11.RainFallMax="";			GeneralDesignData11.SnowFallTotalAccumulation="";			GeneralDesignData11.FoundationType="";			GeneralDesignData11.InsulationShell="";			GeneralDesignData11.InsulationRoof="";			GeneralDesignData11.MDMT="";			GeneralDesignData11.DMT="";			GeneralDesignData = GeneralDesignData11;						GeneralCapacityWeightModel GeneralCapacityWeight11 = new GeneralCapacityWeightModel();			GeneralCapacityWeight11.Empty="1";			GeneralCapacityWeight11.Operating="2";			GeneralCapacityWeight11.FullOfWater="3";			GeneralCapacityWeight11.Insulation="4";			GeneralCapacityWeight11.PlatformLadder="5";			GeneralCapacityWeight11.Others="6";			GeneralCapacityWeight11.Liquid="7";			GeneralCapacityWeight11.PaintingAreaInt="8";			GeneralCapacityWeight11.PaintingAreaExt="9";			GeneralCapacityWeight11.NominalCapacity="10";			GeneralCapacityWeight11.WorkingCapacity="11";			GeneralCapacityWeight11.NetWorkingCapacity="12";			GeneralCapacityWeight.Add(GeneralCapacityWeight11);						GeneralCapacityWeightModel GeneralCapacityWeight12 = new GeneralCapacityWeightModel();			GeneralCapacityWeight12.Empty="22";			GeneralCapacityWeight12.Operating="23";			GeneralCapacityWeight12.FullOfWater="24";			GeneralCapacityWeight12.Insulation="25";			GeneralCapacityWeight12.PlatformLadder="26";			GeneralCapacityWeight12.Others="27";			GeneralCapacityWeight12.Liquid="28";			GeneralCapacityWeight12.PaintingAreaInt="29";			GeneralCapacityWeight12.PaintingAreaExt="30";			GeneralCapacityWeight12.NominalCapacity="31";			GeneralCapacityWeight12.WorkingCapacity="32";			GeneralCapacityWeight12.NetWorkingCapacity="33";			GeneralCapacityWeight.Add(GeneralCapacityWeight12);						GeneralMomentAndShearForceAtBaseModel GeneralMomentAndShearForceAtBase11 = new GeneralMomentAndShearForceAtBaseModel();			GeneralMomentAndShearForceAtBase11.WindMoment="5";			GeneralMomentAndShearForceAtBase11.SeismicMoment="6";			GeneralMomentAndShearForceAtBase11.ShearForceEmpty="7";			GeneralMomentAndShearForceAtBase11.ShearForceOperating="8";			GeneralMomentAndShearForceAtBase.Add(GeneralMomentAndShearForceAtBase11);						ShellInputModel ShellInput11 = new ShellInputModel();			ShellInput11.CAOfShell="3";			ShellInput11.CourseCount="8";			ShellInput11.PlateCnt="12";			ShellInput.Add(ShellInput11);						ShellOutputModel ShellOutput11 = new ShellOutputModel();			ShellOutput11.CourseNo="1";			ShellOutput11.MinThk="17";			ShellOutput11.StartPoint="2830.4";			ShellOutput11.Width="2430";			ShellOutput11.Length="8491.2";			ShellOutput11.RepeatNo="1";			ShellOutput.Add(ShellOutput11);						ShellOutputModel ShellOutput12 = new ShellOutputModel();			ShellOutput12.CourseNo="2";			ShellOutput12.MinThk="13";			ShellOutput12.StartPoint="5660.8";			ShellOutput12.Width="2430";			ShellOutput12.Length="8491.2";			ShellOutput12.RepeatNo="1";			ShellOutput.Add(ShellOutput12);						ShellOutputModel ShellOutput13 = new ShellOutputModel();			ShellOutput13.CourseNo="3";			ShellOutput13.MinThk="11";			ShellOutput13.StartPoint="8491.2";			ShellOutput13.Width="2430";			ShellOutput13.Length="0";			ShellOutput13.RepeatNo="0";			ShellOutput.Add(ShellOutput13);						ShellOutputModel ShellOutput14 = new ShellOutputModel();			ShellOutput14.CourseNo="4";			ShellOutput14.MinThk="9";			ShellOutput14.StartPoint="2830.4";			ShellOutput14.Width="2430";			ShellOutput14.Length="8491.2";			ShellOutput14.RepeatNo="1";			ShellOutput.Add(ShellOutput14);						ShellOutputModel ShellOutput15 = new ShellOutputModel();			ShellOutput15.CourseNo="5";			ShellOutput15.MinThk="8";			ShellOutput15.StartPoint="5660.8";			ShellOutput15.Width="2430";			ShellOutput15.Length="8491.2";			ShellOutput15.RepeatNo="1";			ShellOutput.Add(ShellOutput15);						ShellOutputModel ShellOutput16 = new ShellOutputModel();			ShellOutput16.CourseNo="6";			ShellOutput16.MinThk="6";			ShellOutput16.StartPoint="8491.2";			ShellOutput16.Width="2430";			ShellOutput16.Length="0";			ShellOutput16.RepeatNo="0";			ShellOutput.Add(ShellOutput16);						ShellOutputModel ShellOutput17 = new ShellOutputModel();			ShellOutput17.CourseNo="7";			ShellOutput17.MinThk="6";			ShellOutput17.StartPoint="2830.4";			ShellOutput17.Width="2430";			ShellOutput17.Length="8491.2";			ShellOutput17.RepeatNo="1";			ShellOutput.Add(ShellOutput17);						ShellOutputModel ShellOutput18 = new ShellOutputModel();			ShellOutput18.CourseNo="8";			ShellOutput18.MinThk="6";			ShellOutput18.StartPoint="5660.8";			ShellOutput18.Width="2290";			ShellOutput18.Length="8491.2";			ShellOutput18.RepeatNo="1";			ShellOutput.Add(ShellOutput18);						RoofInputModel RoofInput11 = new RoofInputModel();			RoofInput11.RoofSlopeOne="16";			RoofInput11.RoofThickness="8";			RoofInput11.CAOfRoof="1.5";			RoofInput11.TopAngleType="b";			RoofInput11.TopAneSize="L 150x150x12";			RoofInput.Add(RoofInput11);						RoofOutputModel RoofOutput11 = new RoofOutputModel();			RoofOutput11.ShellThk="6";			RoofOutput11.TwoTcMax="10";			RoofOutput11.AngleSize="150";			RoofOutput11.AngleThk="12";			RoofOutput11.B="40";			RoofOutput11.RoofAngle="9.462322208";			RoofOutput11.RoofThk="8";			RoofOutput11.WcStartPoint="";			RoofOutput11.Wc="";			RoofOutput11.TwoTsOrTwoTbMax="";			RoofOutput11.RingWidth="";			RoofOutput11.RingThk="";			RoofOutput11.ComprRingWidth="";			RoofOutput11.OutsideProjection="";			RoofOutput11.OverlapOfRoof="";			RoofOutput.Add(RoofOutput11);						BottomInputModel BottomInput11 = new BottomInputModel();			BottomInput11.BottomSlope="120";			BottomInput11.BottomThickness="9";			BottomInput11.CAOfBottomPlate="1.5";			BottomInput11.AnnularPlateReqd="Yes";			BottomInput11.AnnularPlateThickness="12";			BottomInput.Add(BottomInput11);						BottomOutputModel BottomOutput11 = new BottomOutputModel();			BottomOutput11.ShellThk="17";			BottomOutput11.OutSideProjection="69";			BottomOutput11.InsideProjection="500";			BottomOutput11.ODTwo="16290";			BottomOutput11.BottomPlateAngle="0.477453777";			BottomOutput11.OverlapOfAnnular="70";			BottomOutput.Add(BottomOutput11);						NozzleInputModel NozzleInputModel11 = new NozzleInputModel();			NozzleInputModel11.Position="SHELL";			NozzleInputModel11.Mark="N1";			NozzleInputModel11.Size="14";			NozzleInputModel11.Qty="1";			NozzleInputModel11.Rating="ASME #150";			NozzleInputModel11.Facing="WN.RF";			NozzleInputModel11.R="SEE DWG.";			NozzleInputModel11.H="1052";			NozzleInputModel11.Ort="SEE DWG.";			NozzleInputModel11.Description="INLET";			NozzleInputModel11.Remarks="w/DIFFUSER";			NozzleInputModel11.NozzlePosition="LEFT";			NozzleInputModel11.Height="1052";			NozzleInputModel11.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel11);						NozzleInputModel NozzleInputModel12 = new NozzleInputModel();			NozzleInputModel12.Position="SHELL";			NozzleInputModel12.Mark="N1-a";			NozzleInputModel12.Size="1";			NozzleInputModel12.Qty="1";			NozzleInputModel12.Rating="ASME #150";			NozzleInputModel12.Facing="WN.RF";			NozzleInputModel12.R="SEE DWG.";			NozzleInputModel12.H="SEE DWG.";			NozzleInputModel12.Ort="";			NozzleInputModel12.Description="OUTLET";			NozzleInputModel12.Remarks="";			NozzleInputModel12.NozzlePosition="RIGHT";			NozzleInputModel12.Height="";			NozzleInputModel12.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel12);						NozzleInputModel NozzleInputModel13 = new NozzleInputModel();			NozzleInputModel13.Position="SHELL";			NozzleInputModel13.Mark="N2A";			NozzleInputModel13.Size="20";			NozzleInputModel13.Qty="1";			NozzleInputModel13.Rating="ASME #150";			NozzleInputModel13.Facing="WN.RF";			NozzleInputModel13.R="SEE DWG.";			NozzleInputModel13.H="850";			NozzleInputModel13.Ort="";			NozzleInputModel13.Description="INLET";			NozzleInputModel13.Remarks="";			NozzleInputModel13.NozzlePosition="LEFT";			NozzleInputModel13.Height="850";			NozzleInputModel13.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel13);						NozzleInputModel NozzleInputModel14 = new NozzleInputModel();			NozzleInputModel14.Position="SHELL";			NozzleInputModel14.Mark="N2B";			NozzleInputModel14.Size="24";			NozzleInputModel14.Qty="1";			NozzleInputModel14.Rating="ASME #150";			NozzleInputModel14.Facing="WN.RF";			NozzleInputModel14.R="16580";			NozzleInputModel14.H="1230";			NozzleInputModel14.Ort="";			NozzleInputModel14.Description="OUTLET (HIGH SUC.)";			NozzleInputModel14.Remarks="ASME B16.47 \"SERIES A\"";			NozzleInputModel14.NozzlePosition="LEFT";			NozzleInputModel14.Height="1230";			NozzleInputModel14.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel14);						NozzleInputModel NozzleInputModel15 = new NozzleInputModel();			NozzleInputModel15.Position="SHELL";			NozzleInputModel15.Mark="D";			NozzleInputModel15.Size="8";			NozzleInputModel15.Qty="1";			NozzleInputModel15.Rating="ASME #150";			NozzleInputModel15.Facing="WN.RF";			NozzleInputModel15.R="SEE DWG.";			NozzleInputModel15.H="1230";			NozzleInputModel15.Ort="";			NozzleInputModel15.Description="DRAIN";			NozzleInputModel15.Remarks="w/SUMP";			NozzleInputModel15.NozzlePosition="LEFT";			NozzleInputModel15.Height="1230";			NozzleInputModel15.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel15);						NozzleInputModel NozzleInputModel16 = new NozzleInputModel();			NozzleInputModel16.Position="SHELL";			NozzleInputModel16.Mark="N3A";			NozzleInputModel16.Size="2";			NozzleInputModel16.Qty="1";			NozzleInputModel16.Rating="ASME #150";			NozzleInputModel16.Facing="WN.RF";			NozzleInputModel16.R="16390";			NozzleInputModel16.H="200";			NozzleInputModel16.Ort="";			NozzleInputModel16.Description="FOAM CHAMBER CONNECTION";			NozzleInputModel16.Remarks="w/INTERNAL PIPE (15000mm)";			NozzleInputModel16.NozzlePosition="";			NozzleInputModel16.Height="200";			NozzleInputModel16.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel16);						NozzleInputModel NozzleInputModel17 = new NozzleInputModel();			NozzleInputModel17.Position="SHELL";			NozzleInputModel17.Mark="N3B";			NozzleInputModel17.Size="2";			NozzleInputModel17.Qty="1";			NozzleInputModel17.Rating="ASME #150";			NozzleInputModel17.Facing="WN.RF";			NozzleInputModel17.R="16390";			NozzleInputModel17.H="200";			NozzleInputModel17.Ort="";			NozzleInputModel17.Description="STEAM IN";			NozzleInputModel17.Remarks="";			NozzleInputModel17.NozzlePosition="LEFT";			NozzleInputModel17.Height="200";			NozzleInputModel17.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel17);						NozzleInputModel NozzleInputModel18 = new NozzleInputModel();			NozzleInputModel18.Position="SHELL";			NozzleInputModel18.Mark="N4";			NozzleInputModel18.Size="1";			NozzleInputModel18.Qty="1";			NozzleInputModel18.Rating="ASME #150";			NozzleInputModel18.Facing="WN.RF";			NozzleInputModel18.R="16515";			NozzleInputModel18.H="1230";			NozzleInputModel18.Ort="";			NozzleInputModel18.Description="CONDENSATE OUT";			NozzleInputModel18.Remarks="w/INTERNAL PIPE";			NozzleInputModel18.NozzlePosition="LEFT";			NozzleInputModel18.Height="1230";			NozzleInputModel18.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel18);						NozzleInputModel NozzleInputModel19 = new NozzleInputModel();			NozzleInputModel19.Position="SHELL";			NozzleInputModel19.Mark="N5A~E";			NozzleInputModel19.Size="4x6";			NozzleInputModel19.Qty="5";			NozzleInputModel19.Rating="ASME #150";			NozzleInputModel19.Facing="WN.RF";			NozzleInputModel19.R="16450";			NozzleInputModel19.H="18365";			NozzleInputModel19.Ort="";			NozzleInputModel19.Description="TEMPERATURE GAUGE";			NozzleInputModel19.Remarks="w/FOAM CHAMBER & DEFLECTOR";			NozzleInputModel19.NozzlePosition="LEFT";			NozzleInputModel19.Height="18365";			NozzleInputModel19.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel19);						NozzleInputModel NozzleInputModel20 = new NozzleInputModel();			NozzleInputModel20.Position="SHELL";			NozzleInputModel20.Mark="MH1";			NozzleInputModel20.Size="36x48";			NozzleInputModel20.Qty="1";			NozzleInputModel20.Rating="API 650";			NozzleInputModel20.Facing="";			NozzleInputModel20.R="16430";			NozzleInputModel20.H="-";			NozzleInputModel20.Ort="";			NozzleInputModel20.Description="CLEAN OUT DOOR";			NozzleInputModel20.Remarks="w/COVER";			NozzleInputModel20.NozzlePosition="CENTER";			NozzleInputModel20.Height="";			NozzleInputModel20.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel20);						NozzleInputModel NozzleInputModel21 = new NozzleInputModel();			NozzleInputModel21.Position="SHELL";			NozzleInputModel21.Mark="MH2";			NozzleInputModel21.Size="24";			NozzleInputModel21.Qty="1";			NozzleInputModel21.Rating="API 650";			NozzleInputModel21.Facing="";			NozzleInputModel21.R="16430";			NozzleInputModel21.H="910";			NozzleInputModel21.Ort="";			NozzleInputModel21.Description="SHELL MANHOLE";			NozzleInputModel21.Remarks="w/COVER";			NozzleInputModel21.NozzlePosition="";			NozzleInputModel21.Height="";			NozzleInputModel21.HeightSort=0;			NozzleInputModel.Add(NozzleInputModel21);						EqualAngleSizeModel AngleInput11 = new EqualAngleSizeModel();			AngleInput11.Size="L 50x50x6";			AngleInput11.AB="50";			AngleInput11.t="6";			AngleInput11.R1="6.5";			AngleInput11.R2="4.5";			AngleInput11.CD="14.4";			AngleInput11.E="10";			AngleInput.Add(AngleInput11);						EqualAngleSizeModel AngleInput12 = new EqualAngleSizeModel();			AngleInput12.Size="L 50x50x8";			AngleInput12.AB="50";			AngleInput12.t="8";			AngleInput12.R1="6.5";			AngleInput12.R2="4.5";			AngleInput12.CD="15.2";			AngleInput12.E="10";			AngleInput.Add(AngleInput12);						EqualAngleSizeModel AngleInput13 = new EqualAngleSizeModel();			AngleInput13.Size="L 60x60x4";			AngleInput13.AB="60";			AngleInput13.t="4";			AngleInput13.R1="6.5";			AngleInput13.R2="3";			AngleInput13.CD="16.1";			AngleInput13.E="15";			AngleInput.Add(AngleInput13);						EqualAngleSizeModel AngleInput14 = new EqualAngleSizeModel();			AngleInput14.Size="L 60x60x5";			AngleInput14.AB="60";			AngleInput14.t="5";			AngleInput14.R1="6.5";			AngleInput14.R2="3";			AngleInput14.CD="16.6";			AngleInput14.E="15";			AngleInput.Add(AngleInput14);						EqualAngleSizeModel AngleInput15 = new EqualAngleSizeModel();			AngleInput15.Size="L 60x60x6";			AngleInput15.AB="60";			AngleInput15.t="6";			AngleInput15.R1="6.5";			AngleInput15.R2="4.5";			AngleInput15.CD="16.9";			AngleInput15.E="15";			AngleInput.Add(AngleInput15);						EqualAngleSizeModel AngleInput16 = new EqualAngleSizeModel();			AngleInput16.Size="L 60x60x7";			AngleInput16.AB="60";			AngleInput16.t="7";			AngleInput16.R1="6.5";			AngleInput16.R2="4.5";			AngleInput16.CD="17.3";			AngleInput16.E="15";			AngleInput.Add(AngleInput16);						EqualAngleSizeModel AngleInput17 = new EqualAngleSizeModel();			AngleInput17.Size="L 60x60x9";			AngleInput17.AB="60";			AngleInput17.t="9";			AngleInput17.R1="6.5";			AngleInput17.R2="4.5";			AngleInput17.CD="18.1";			AngleInput17.E="15";			AngleInput.Add(AngleInput17);						EqualAngleSizeModel AngleInput18 = new EqualAngleSizeModel();			AngleInput18.Size="L 65x65x6";			AngleInput18.AB="65";			AngleInput18.t="6";			AngleInput18.R1="8.5";			AngleInput18.R2="4";			AngleInput18.CD="18.1";			AngleInput18.E="15";			AngleInput.Add(AngleInput18);						EqualAngleSizeModel AngleInput19 = new EqualAngleSizeModel();			AngleInput19.Size="L 65x65x8";			AngleInput19.AB="65";			AngleInput19.t="8";			AngleInput19.R1="8.5";			AngleInput19.R2="6";			AngleInput19.CD="18.8";			AngleInput19.E="15";			AngleInput.Add(AngleInput19);						EqualAngleSizeModel AngleInput20 = new EqualAngleSizeModel();			AngleInput20.Size="L 65x65x10";			AngleInput20.AB="65";			AngleInput20.t="10";			AngleInput20.R1="8.5";			AngleInput20.R2="6";			AngleInput20.CD="19.6";			AngleInput20.E="15";			AngleInput.Add(AngleInput20);						EqualAngleSizeModel AngleInput21 = new EqualAngleSizeModel();			AngleInput21.Size="L 70x70x6";			AngleInput21.AB="70";			AngleInput21.t="6";			AngleInput21.R1="8.5";			AngleInput21.R2="4";			AngleInput21.CD="19.4";			AngleInput21.E="15";			AngleInput.Add(AngleInput21);						EqualAngleSizeModel AngleInput22 = new EqualAngleSizeModel();			AngleInput22.Size="L 75x75x6";			AngleInput22.AB="75";			AngleInput22.t="6";			AngleInput22.R1="8.5";			AngleInput22.R2="4";			AngleInput22.CD="20.6";			AngleInput22.E="15";			AngleInput.Add(AngleInput22);						EqualAngleSizeModel AngleInput23 = new EqualAngleSizeModel();			AngleInput23.Size="L 75x75x9";			AngleInput23.AB="75";			AngleInput23.t="9";			AngleInput23.R1="8.5";			AngleInput23.R2="6";			AngleInput23.CD="21.7";			AngleInput23.E="20";			AngleInput.Add(AngleInput23);						EqualAngleSizeModel AngleInput24 = new EqualAngleSizeModel();			AngleInput24.Size="L 75x75x12";			AngleInput24.AB="75";			AngleInput24.t="12";			AngleInput24.R1="8.5";			AngleInput24.R2="6";			AngleInput24.CD="22.9";			AngleInput24.E="20";			AngleInput.Add(AngleInput24);						EqualAngleSizeModel AngleInput25 = new EqualAngleSizeModel();			AngleInput25.Size="L 80x80x6";			AngleInput25.AB="80";			AngleInput25.t="6";			AngleInput25.R1="8.5";			AngleInput25.R2="4";			AngleInput25.CD="21.9";			AngleInput25.E="20";			AngleInput.Add(AngleInput25);						EqualAngleSizeModel AngleInput26 = new EqualAngleSizeModel();			AngleInput26.Size="L 90x90x6";			AngleInput26.AB="90";			AngleInput26.t="6";			AngleInput26.R1="10";			AngleInput26.R2="5";			AngleInput26.CD="24.2";			AngleInput26.E="20";			AngleInput.Add(AngleInput26);						EqualAngleSizeModel AngleInput27 = new EqualAngleSizeModel();			AngleInput27.Size="L 90x90x7";			AngleInput27.AB="90";			AngleInput27.t="7";			AngleInput27.R1="10";			AngleInput27.R2="5";			AngleInput27.CD="24.6";			AngleInput27.E="20";			AngleInput.Add(AngleInput27);						EqualAngleSizeModel AngleInput28 = new EqualAngleSizeModel();			AngleInput28.Size="L 90x90x10";			AngleInput28.AB="90";			AngleInput28.t="10";			AngleInput28.R1="10";			AngleInput28.R2="7";			AngleInput28.CD="25.8";			AngleInput28.E="25";			AngleInput.Add(AngleInput28);						EqualAngleSizeModel AngleInput29 = new EqualAngleSizeModel();			AngleInput29.Size="L 90x90x13";			AngleInput29.AB="90";			AngleInput29.t="13";			AngleInput29.R1="10";			AngleInput29.R2="7";			AngleInput29.CD="26.9";			AngleInput29.E="25";			AngleInput.Add(AngleInput29);						EqualAngleSizeModel AngleInput30 = new EqualAngleSizeModel();			AngleInput30.Size="L 100x100x7";			AngleInput30.AB="100";			AngleInput30.t="7";			AngleInput30.R1="10";			AngleInput30.R2="5";			AngleInput30.CD="27.1";			AngleInput30.E="25";			AngleInput.Add(AngleInput30);						EqualAngleSizeModel AngleInput31 = new EqualAngleSizeModel();			AngleInput31.Size="L 100x100x10";			AngleInput31.AB="100";			AngleInput31.t="10";			AngleInput31.R1="10";			AngleInput31.R2="7";			AngleInput31.CD="28.3";			AngleInput31.E="25";			AngleInput.Add(AngleInput31);						EqualAngleSizeModel AngleInput32 = new EqualAngleSizeModel();			AngleInput32.Size="L 100x100x13";			AngleInput32.AB="100";			AngleInput32.t="13";			AngleInput32.R1="10";			AngleInput32.R2="7";			AngleInput32.CD="29.4";			AngleInput32.E="25";			AngleInput.Add(AngleInput32);						EqualAngleSizeModel AngleInput33 = new EqualAngleSizeModel();			AngleInput33.Size="L 120x120x8";			AngleInput33.AB="120";			AngleInput33.t="8";			AngleInput33.R1="12";			AngleInput33.R2="5";			AngleInput33.CD="32.4";			AngleInput33.E="30";			AngleInput.Add(AngleInput33);						EqualAngleSizeModel AngleInput34 = new EqualAngleSizeModel();			AngleInput34.Size="L 130x130x9";			AngleInput34.AB="130";			AngleInput34.t="9";			AngleInput34.R1="12";			AngleInput34.R2="6";			AngleInput34.CD="35.3";			AngleInput34.E="30";			AngleInput.Add(AngleInput34);						EqualAngleSizeModel AngleInput35 = new EqualAngleSizeModel();			AngleInput35.Size="L 130x130x12";			AngleInput35.AB="130";			AngleInput35.t="12";			AngleInput35.R1="12";			AngleInput35.R2="8.5";			AngleInput35.CD="36.4";			AngleInput35.E="35";			AngleInput.Add(AngleInput35);						EqualAngleSizeModel AngleInput36 = new EqualAngleSizeModel();			AngleInput36.Size="L 130x130x15";			AngleInput36.AB="130";			AngleInput36.t="15";			AngleInput36.R1="12";			AngleInput36.R2="8.5";			AngleInput36.CD="37.6";			AngleInput36.E="35";			AngleInput.Add(AngleInput36);						EqualAngleSizeModel AngleInput37 = new EqualAngleSizeModel();			AngleInput37.Size="L 150x150x10";			AngleInput37.AB="150";			AngleInput37.t="10";			AngleInput37.R1="14";			AngleInput37.R2="7";			AngleInput37.CD="40.5";			AngleInput37.E="35";			AngleInput.Add(AngleInput37);						EqualAngleSizeModel AngleInput38 = new EqualAngleSizeModel();			AngleInput38.Size="L 150x150x12";			AngleInput38.AB="150";			AngleInput38.t="12";			AngleInput38.R1="14";			AngleInput38.R2="7";			AngleInput38.CD="41.4";			AngleInput38.E="40";			AngleInput.Add(AngleInput38);						EqualAngleSizeModel AngleInput39 = new EqualAngleSizeModel();			AngleInput39.Size="L 150x150x15";			AngleInput39.AB="150";			AngleInput39.t="15";			AngleInput39.R1="14";			AngleInput39.R2="10";			AngleInput39.CD="42.4";			AngleInput39.E="40";			AngleInput.Add(AngleInput39);						EqualAngleSizeModel AngleInput40 = new EqualAngleSizeModel();			AngleInput40.Size="L 150x150x19";			AngleInput40.AB="150";			AngleInput40.t="19";			AngleInput40.R1="14";			AngleInput40.R2="10";			AngleInput40.CD="44";			AngleInput40.E="40";			AngleInput.Add(AngleInput40);						EqualAngleSizeModel AngleInput41 = new EqualAngleSizeModel();			AngleInput41.Size="L 175x175x12";			AngleInput41.AB="175";			AngleInput41.t="12";			AngleInput41.R1="15";			AngleInput41.R2="11";			AngleInput41.CD="47.3";			AngleInput41.E="45";			AngleInput.Add(AngleInput41);						EqualAngleSizeModel AngleInput42 = new EqualAngleSizeModel();			AngleInput42.Size="L 175x175x15";			AngleInput42.AB="175";			AngleInput42.t="15";			AngleInput42.R1="15";			AngleInput42.R2="11";			AngleInput42.CD="48.5";			AngleInput42.E="45";			AngleInput.Add(AngleInput42);						EqualAngleSizeModel AngleInput43 = new EqualAngleSizeModel();			AngleInput43.Size="L 200x200x15";			AngleInput43.AB="200";			AngleInput43.t="15";			AngleInput43.R1="17";			AngleInput43.R2="12";			AngleInput43.CD="54.7";			AngleInput43.E="50";			AngleInput.Add(AngleInput43);						EqualAngleSizeModel AngleInput44 = new EqualAngleSizeModel();			AngleInput44.Size="L 200x200x20";			AngleInput44.AB="200";			AngleInput44.t="20";			AngleInput44.R1="17";			AngleInput44.R2="12";			AngleInput44.CD="56.7";			AngleInput44.E="50";			AngleInput.Add(AngleInput44);						EqualAngleSizeModel AngleInput45 = new EqualAngleSizeModel();			AngleInput45.Size="L 200x200x25";			AngleInput45.AB="200";			AngleInput45.t="25";			AngleInput45.R1="17";			AngleInput45.R2="12";			AngleInput45.CD="58.7";			AngleInput45.E="50";			AngleInput.Add(AngleInput45);						EqualAngleSizeModel AngleInput46 = new EqualAngleSizeModel();			AngleInput46.Size="L 250x250x25";			AngleInput46.AB="250";			AngleInput46.t="25";			AngleInput46.R1="24";			AngleInput46.R2="12";			AngleInput46.CD="71";			AngleInput46.E="65";			AngleInput.Add(AngleInput46);						EqualAngleSizeModel AngleInput47 = new EqualAngleSizeModel();			AngleInput47.Size="L 250x250x35";			AngleInput47.AB="250";			AngleInput47.t="35";			AngleInput47.R1="24";			AngleInput47.R2="18";			AngleInput47.CD="74.5";			AngleInput47.E="70";			AngleInput.Add(AngleInput47);					}		}}