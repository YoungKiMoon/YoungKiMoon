using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class DrainSumpModel : Notifier	{		public DrainSumpModel()		{					NPS = "";			A = "";			B = "";			t1 = "";			t2 = "";			t3 = "";			t4 = "";			C = "";			D = "";			E = "";			SupportAngle = "";			F = "";			G = "";			A1 = "";			B1 = "";			C1 = "";			D1 = "";			Elbow = "";		}				private string _NPS;		public string NPS			{				get { return _NPS; }				set				{					_NPS = value;					OnPropertyChanged(nameof(NPS));				}			}				private string _A;		public string A			{				get { return _A; }				set				{					_A = value;					OnPropertyChanged(nameof(A));				}			}				private string _B;		public string B			{				get { return _B; }				set				{					_B = value;					OnPropertyChanged(nameof(B));				}			}				private string _t1;		public string t1			{				get { return _t1; }				set				{					_t1 = value;					OnPropertyChanged(nameof(t1));				}			}				private string _t2;		public string t2			{				get { return _t2; }				set				{					_t2 = value;					OnPropertyChanged(nameof(t2));				}			}				private string _t3;		public string t3			{				get { return _t3; }				set				{					_t3 = value;					OnPropertyChanged(nameof(t3));				}			}				private string _t4;		public string t4			{				get { return _t4; }				set				{					_t4 = value;					OnPropertyChanged(nameof(t4));				}			}				private string _C;		public string C			{				get { return _C; }				set				{					_C = value;					OnPropertyChanged(nameof(C));				}			}				private string _D;		public string D			{				get { return _D; }				set				{					_D = value;					OnPropertyChanged(nameof(D));				}			}				private string _E;		public string E			{				get { return _E; }				set				{					_E = value;					OnPropertyChanged(nameof(E));				}			}				private string _SupportAngle;		public string SupportAngle			{				get { return _SupportAngle; }				set				{					_SupportAngle = value;					OnPropertyChanged(nameof(SupportAngle));				}			}				private string _F;		public string F			{				get { return _F; }				set				{					_F = value;					OnPropertyChanged(nameof(F));				}			}				private string _G;		public string G			{				get { return _G; }				set				{					_G = value;					OnPropertyChanged(nameof(G));				}			}				private string _A1;		public string A1			{				get { return _A1; }				set				{					_A1 = value;					OnPropertyChanged(nameof(A1));				}			}				private string _B1;		public string B1			{				get { return _B1; }				set				{					_B1 = value;					OnPropertyChanged(nameof(B1));				}			}				private string _C1;		public string C1			{				get { return _C1; }				set				{					_C1 = value;					OnPropertyChanged(nameof(C1));				}			}				private string _D1;		public string D1			{				get { return _D1; }				set				{					_D1 = value;					OnPropertyChanged(nameof(D1));				}			}				private string _Elbow;		public string Elbow			{				get { return _Elbow; }				set				{					_Elbow = value;					OnPropertyChanged(nameof(Elbow));				}			}			}}