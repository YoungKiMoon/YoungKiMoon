using AssemblyLib.Utils;using System;using System.Collections.Generic;using System.Collections.ObjectModel;using System.Linq;using System.Text;using System.Threading.Tasks;namespace AssemblyLib.AssemblyModels{	public class NColumnSideTopSupportModel : Notifier	{		public NColumnSideTopSupportModel()		{					ColumnSize = "";			A1 = "";			B1 = "";			C1 = "";			D1 = "";			E1 = "";			F1 = "";			G1 = "";			D = "";			E = "";		}				private string _ColumnSize;		public string ColumnSize			{				get { return _ColumnSize; }				set				{					_ColumnSize = value;					OnPropertyChanged(nameof(ColumnSize));				}			}				private string _A1;		public string A1			{				get { return _A1; }				set				{					_A1 = value;					OnPropertyChanged(nameof(A1));				}			}				private string _B1;		public string B1			{				get { return _B1; }				set				{					_B1 = value;					OnPropertyChanged(nameof(B1));				}			}				private string _C1;		public string C1			{				get { return _C1; }				set				{					_C1 = value;					OnPropertyChanged(nameof(C1));				}			}				private string _D1;		public string D1			{				get { return _D1; }				set				{					_D1 = value;					OnPropertyChanged(nameof(D1));				}			}				private string _E1;		public string E1			{				get { return _E1; }				set				{					_E1 = value;					OnPropertyChanged(nameof(E1));				}			}				private string _F1;		public string F1			{				get { return _F1; }				set				{					_F1 = value;					OnPropertyChanged(nameof(F1));				}			}				private string _G1;		public string G1			{				get { return _G1; }				set				{					_G1 = value;					OnPropertyChanged(nameof(G1));				}			}				private string _D;		public string D			{				get { return _D; }				set				{					_D = value;					OnPropertyChanged(nameof(D));				}			}				private string _E;		public string E			{				get { return _E; }				set				{					_E = value;					OnPropertyChanged(nameof(E));				}			}			}}